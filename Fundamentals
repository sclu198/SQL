Using PostgreSQL


Lesson 1
    Database: A collection of tables that share connected data stored in a computer.
    Entity Relationship Diagrams(ERD): A diagram that shows how data is structured in a database.
    SQL: A language that allows us to access data stored in a database.

    Most popular type of SQL Databases:
        MySQL
        Access
        Oracle
        Microsoft SQL Server
        Postgres
    Statements:
    1. A piece of correctly writen SQL code.
    2. A way to manipulate data stored in a database.
    3. A sentance.
    4. A way to read data stored in a database.
        Example - 
            # CREATE TABLE is a statement that creates a new table in a database.
            # DROP TABLE is a statement that removes a table in a database.
            # SELECT allows you to read data and display it. This is called a query.

    SELECT: indicates which column(s) you want to be given the data for.
    FROM: specifies from which table(s) you want to select the columns. Notice the columns need to exist in this table.
    * = select star means all

    SELECT and FROM in Every SQL Query
    Every query will have at least a SELECT and FROM statement. 
    The SELECT statement is where you put the columns for which you would like to show the data. 
    The FROM statement is where you put the tables from which you would like to pull data.
    
    LIMIT statement is useful when you want to see just the first few rows of a table.
    LIMIT command is always the very last part of a query.

    ORDER BY: 
    1. Allows us to sort our results using the data in any column. 
    2. ORDER BY in a SQL query only has temporary effects, for the results of that query, 
       unlike sorting a sheet by column in Excel or Sheets.
    3. Always comes in a query after the SELECT and FROM statements, but before the LIMIT statement.
    4. DESC can be added after the column in your ORDER BY statement to sort in descending order, 
       as the default is to sort in ascending order.

    WHERE:
    1. we can display subsets of tables based on conditions that must be met.
    2. filtering the data
    3. Common symbols - 
            > (greater than)
            < (less than)
            >= (greater than or equal to)
            <= (less than or equal to)
            = (equal to)
            != (not equal to)
     4. WHERE statement can also be used with non-numeric data. Use single quotes with the text data.
     5. Commonly when we are using WHERE with non-numeric data fields, we use the LIKE, NOT, or IN operators.

    Arithmetic Operators
    1. Derived Columns: 
            * Creating a new column that is a combination of existing columns is known as a derived column 
              (or "calculated" or "computed" column). Usually you want to give a name, or "alias," to your new column using the AS keyword.
            * This derived column, and its alias, are generally only temporary, existing just for the duration of your query.
    2. * (Multiplication)
       + (Addition)
       - (Subtraction)
       / (Division)
       
Logical Operators       
    LIKE (CN Intro, https://www.1keydata.com/tw/sql/sqllike.html):
    1. LIKE operator is extremely useful for working with text.
    2. use LIKE within a WHERE clause.
    3. The LIKE operator is frequently used with %.
        Remark: wildcard (萬用字元, https://www.1keydata.com/tw/sql/sql-wildcard.html)
       
    IN (CN Intro, https://www.1keydata.com/tw/sql/sqlin.html)
    
    NOT
    AND
    BETWEEN
    OR
   
   Recap
   Statement	How to Use It	                Other Details
    SELECT	    SELECT Col1, Col2, ...	        Provide the columns you want
    FROM	    FROM Table	                    Provide the table where the columns exist
    LIMIT	    LIMIT 10	                    Limits based number of rows returned
    ORDER BY	ORDER BY Col	                Orders table based on the column. Used with DESC.
    WHERE	    WHERE Col > 5	                A conditional statement to filter your results
    LIKE	    WHERE Col LIKE '%me%'	        Only pulls rows where column has 'me' within the text
    IN	        WHERE Col IN ('Y', 'N')	        A filter for only rows with column of 'Y' or 'N'
    NOT	        WHERE Col NOT IN ('Y', 'N')	    NOT is frequently used with LIKE and IN
    AND	        WHERE Col1 > 5 AND Col2 < 3	    Filter rows where two or more conditions must be true
    OR	        WHERE Col1 > 5 OR Col2 < 3	    Filter rows where at least one condition must be true
    BETWEEN	    WHERE Col BETWEEN 3 AND 5	    Often easier syntax than using an AND
    
    
Lesson 2

    Inner Join (CN Intro: https://www.fooish.com/sql/inner-join.html)
    Primary Key (PK)
    Foreign Key (FK)
    
    
    
